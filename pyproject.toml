[project]
name = "openpi"
version = "0.1.0"
description = "Physical Intelligence open source repo"
readme = "README.md"
requires-python = ">=3.11"
license = { file = "LICENSE" }
dependencies = [
    "augmax>=0.3.4",
    "dm-tree>=0.1.8",
    "einops>=0.8.0",
    "equinox>=0.11.8",
    "flatbuffers>=24.3.25",
    "flax==0.10.2",
    "fsspec[gcs]>=2024.6.0",
    "gym-aloha>=0.1.1",
    "imageio>=2.36.1",
    "jax[cuda12]==0.5.3",
    "jaxtyping==0.2.36",
    "lerobot",
    "ml_collections==1.0.0",
    "numpy>=1.22.4,<2.0.0",
    "numpydantic>=1.6.6",
    "opencv-python>=4.10.0.84",
    "openpi-client",
    "orbax-checkpoint==0.11.13",
    "pillow>=11.0.0",
    "protobuf>=4.21.6,<5.0.0",
    "flwr[simulation]>=1.20.0",
    "s3fs>=2024.9.0",
    "sentencepiece>=0.2.0",
    "torch>=2.7.0",
    "tqdm-loggable>=0.2",
    "typing-extensions>=4.12.2",
    "tyro>=0.9.5",
    "wandb>=0.19.1",
    "boto3>=1.35.7",
    "types-boto3[boto3,s3]>=1.35.7",
    "filelock>=3.16.1",
    "beartype==0.19.0",
    "treescope>=0.1.7",
    "transformers==4.48.1",
    "rich>=13.5.0,<14.0.0",
    "polars>=1.30.0",
]


[project.urls]
Repository = "https://github.com/Physical-Intelligence/openpi"

[dependency-groups]
dev = [
    "pytest>=8.3.4",
    "ruff>=0.8.6",
    "pre-commit>=4.0.1",
    "ipykernel>=6.29.5",
    "ipywidgets>=8.1.5",
    "matplotlib>=3.10.0",
    "pynvml>=12.0.0",
]


[tool.uv.sources]
openpi-client = { workspace = true }
lerobot = { git = "https://github.com/huggingface/lerobot", rev = "0cf864870cf29f4738d3ade893e6fd13fbd7cdb5" }

[tool.uv.workspace]
members = ["packages/*"]

[tool.ruff]
line-length = 120
target-version = "py311"
extend-exclude = ["docker", "third_party"]

[tool.ruff.lint]
# https://docs.astral.sh/ruff/rules/
select = [
    "B",
    "C4",
    "DTZ",
    "E4",
    "E7",
    "E9",
    "F",
    "FBT",
    "FURB",
    "I",
    "ICN",
    "ISC",
    "LOG",
    "N",
    "PD",
    "PERF",
    "PIE",
    "PLC",
    "PLE",
    "PLR1",
    "PLR5",
    "PLW",
    "PT",
    "PTH",
    "Q",
    "RET",
    "RUF",
    "SIM",
    "SLF",
    "T10",
    "T20",
    "UP",
    "W",
]
ignore = [
    "F722",   # Conflicts with array typing.
    "T201",   # We use print statements.
    "PD008",  # Lots of false positives.
    "ISC001", # Disabling to support ruff format.
    "LOG015", # Use logger.info.
]
unfixable = [
    "B905", # Fix defaults to strict=False, which is not what we want.
]

[tool.ruff.lint.isort]
force-single-line = true
force-sort-within-sections = true
single-line-exclusions = ["collections.abc", "typing", "typing_extensions"]
known-third-party = ["wandb"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pytest.ini_options]
markers = ["manual: should be run manually."]
testpaths = ["src", "scripts", "packages"]


# ============================================================
# Flower Application Configuration
# ============================================================

[tool.flwr.app]
# 发布者（通常保持 flower 即可）
publisher = "flower"

# ------------------------------------------------------------
# 定义服务端和客户端的入口对象
# 格式: "<module>:<object>"
# ------------------------------------------------------------
[tool.flwr.app.components]
# 示例：CLI 启动的 server 和 client
# serverapp = "scripts.federated.server_flwr_cli:app"
# clientapp = "scripts.federated.client_flwr_cli:app"

# 当前实际使用的配置（基于 disk）
serverapp = "scripts.federated_disk.server_flwr_disk:app"
clientapp = "scripts.federated_disk.client_flwr_disk:app"
# clientapp = "scripts.federated_disk.client_flwr_disk_noniid:app"

# ------------------------------------------------------------
# 自定义运行配置，可通过 context.run_config 访问
# ------------------------------------------------------------
[tool.flwr.app.config]
# 训练轮数
num-server-rounds = 15

# 客户端参与条件
min-fit-clients = 6
min-available-clients = 6
fraction-fit = 1.0        # 每一轮参与训练的客户端比例
fraction-evaluate = 0.0   # 每一轮参与评估的客户端比例

# 基础配置
config-name = "pi0_libero_0813_fl"   # 当前实验/配置名称
total-clients = 6                    # 总客户端数
virtual-clients = 1                  # 每台物理机模拟的客户端数
max-parallel-clients = 1             # 最大并发客户端数

# 本地训练参数
local-steps = 1000
batch-size = 16
num-workers = 4
fsdp-devices = 1                     # FSDP 并行设备数

# 训练过程行为控制
release-after-fit = true             # 训练完成是否释放客户端
exit-after-fit = true                # 完成一次 fit 后是否退出
snapshot-interval = 1                # 快照保存间隔（以轮为单位）
# snapshot-dir = "./checkpoints/pi0_libero_0813_fl"  # 可指定快照目录
# 快照的实验子目录名（默认 flwr），最终路径为 ./checkpoints/<config-name>/<snapshot-exp>/
# snapshot-exp = "flwr_non_iid_0819_batch32"
snapshot-exp = "flwr_iid_0820"
resume = true                       # 是否从快照恢复

# 是否在 cache 中保留每一轮的全局权重（不做保留策略删除）
keep-all-globals = true              # 新增选项

# 联邦优化器配置
fed-opt = false                      # 是否启用 fed_opt 进行优化器状态和EMA等全量参数聚合

# 精度设置
store-precision = "fp32"             # 存储时精度
agg-precision = "fp32"               # 聚合时精度

# ============================================================
# 联邦学习环境配置
# ============================================================

[tool.flwr.federations]
# 默认使用的 federation 配置
default = "local-simulation"

# ------------------------------------------------------------
# 本地模拟（Simulation）环境
# 使用 2 个虚拟 SuperNodes
# ------------------------------------------------------------
[tool.flwr.federations.local-simulation]
options.num-supernodes = 6
options.backend.client_resources.num_cpus = 8
options.backend.client_resources.num_gpus = 1

# ------------------------------------------------------------
# 远程联邦（通过 SuperLink）
# ------------------------------------------------------------
[tool.flwr.federations.remote-federation]
address = "<SUPERLINK-ADDRESS>:<PORT>"
insecure = true                      # 测试环境下不启用 TLS
# root-certificates = "<PATH/TO/ca.crt>"   # 如果需要启用 TLS，请配置根证书

# ------------------------------------------------------------
# 本地部署模式（非模拟）
# ------------------------------------------------------------
[tool.flwr.federations.local-deployment]
address = "127.0.0.1:9093"
insecure = true

# IID 种子设置

[tool.flwr.app.iid.pi0_libero_0813_fl]
split_seed = 42

# ------------------------------------------------------------
# 非 IID 数据集映射（可选）
# 说明：当使用 non-IID 客户端 scripts.federated_disk.client_flwr_disk_noniid:app 时，
# 会从此处读取当前 config-name 对应的每个 client 的数据源 repo_id，并覆盖 TrainConfig.data.repo_id。
# 仅在使用 non-IID 客户端时生效；对于现有 IID 客户端不产生影响。
#
# 使用方式：将 [tool.flwr.app.components].clientapp 修改为
#   "scripts.federated_disk.client_flwr_disk_noniid:app"
# 然后在下面为对应的 config-name 填写每个客户端的 repo_id。
#
# 你稍后可补充真实的 6 个数据集路径。
[tool.flwr.app.noniid]

# 示例：针对当前 config-name = "pi0_libero_0813_fl"
[tool.flwr.app.noniid.pi0_libero_0813_fl]
# 按 client_id 顺序给出，每个元素对应一个客户端
repo_id_by_client = [
    "hw3579/libero_banana_state_7_crop",          # client 0
    "hw3579/libero_blue_hammer_state_7_crop",     # client 1
    "hw3579/libero_blue_squash_ball_state_7_crop",# client 2
    "hw3579/libero_gray_spanner_state_7_crop",    # client 3
    "hw3579/libero_lemon_state_7_crop",           # client 4
    "hw3579/libero_white_baseball_state_7_crop",  # client 5
]
